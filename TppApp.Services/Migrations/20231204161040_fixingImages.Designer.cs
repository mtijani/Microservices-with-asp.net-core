// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TppApp.Services.ProductAPI.DbContexts;

namespace TppApp.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231204161040_fixingImages")]
    partial class fixingImages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TppApp.Services.ProductAPI.models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Appetizer",
                            Description = " Delicious and delightful  .<br/>Spicy Tunisian Chorba",
                            ImageUrl = "https://dotnettp.blob.core.windows.net/food/Chorba.jpg",
                            Name = "Chorba",
                            Price = 15.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "Appetizer",
                            Description = "North african Tajine with eggs, cheese and meat ",
                            ImageUrl = "https://dotnettp.blob.core.windows.net/food/tajine.jpg",
                            Name = "Tajine",
                            Price = 13.99
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Dessert",
                            Description = "authentic baklava",
                            ImageUrl = "https://dotnettp.blob.core.windows.net/food/Baklawa-Tunisienne.jpg",
                            Name = "Baklawa",
                            Price = 10.99
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Entree",
                            Description = "Delicious kouskous with vegetables and fish",
                            ImageUrl = "https://dotnettp.blob.core.windows.net/food/couscous-tunisien.jpeg",
                            Name = "Kouskous",
                            Price = 15.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
